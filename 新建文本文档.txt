git@github.com:suzmya/CountDownByPy.git

https://blog.csdn.net/weixin_41145119/article/details/88889509

pip install PyQt5
pip install PyQt5-tools

pip3 install PyQt5
pip3 install PyQt5-tools

pip install PyQt5 -i https://pypi.douban.com/simple
pip install PyQt5-tools -i https://pypi.douban.com/simple

pip3 install PyQt5 -i https://pypi.doubanio.com/simple
pip3 install PyQt5-tools -i https://pypi.doubanio.com/simple

安装完成后，Python安装目录下的Lib\site-packages\pyqt5-tools\designer\designer.exe即是Qt Designer软件。



cmd返回上一层目录的命令是: cd.. 或 cd ..

cmd 返回上两级目录的命令:cd ../..

cmd进入某个文件夹的命令:先执行 盘符 + 冒号, 进入对应的盘符, 如 d:

2.使用命令：pyinstaller -F <name>.py

dist文件夹中的exe即为我们所需要的可执行文件，打开试试吧！

3.除此之外，我们在打包的时候，还可以加个图标美化一下：pyinstaller -i <name>.ico -F <name>.py



cd Users/Administrator/source/repos/PythonApplication2
git add .

git commit -m "first commit"

git remote add origin https://github.com/suzmya/GetSzfcByPy.git

git push -u origin master


ssh-keygen -t rsa -C "691060969@qq.com"

git checkout -b main 命令在GIT工具上创建main分支并进入
git branch -a 查看所有分支
git branch -d [branchname] 删除分支

git init //把这个目录变成Git可以管理的仓库
　　git add README.md //文件添加到仓库
　　git add . //不但可以跟单一文件，还可以跟通配符，更可以跟目录。一个点就把当前目录下所有未追踪的文件全部add了 
　　git commit -m "first commit" //把文件提交到仓库
　　git remote add origin git@github.com:suzmya/GetSzfcByPy.git //关联远程仓库
    
　　git push origin HEAD//把本地库的所有内容推送到远程库上
    git push -u origin main -f 强制推送

    git pull origin main//下载
    git pull origin main --allow-unrelated-histories   把两段不相干的 分支进行强行合并


git add -A 保存所有的修改
git add . 保存新的添加和修改，但是不包括删除
git add -u 保存修改和删除，但是不包括新建文件。

git fetch --all   从远程下载最新的，而不尝试合并或rebase任何东西

git reset --hard origin/<branch_name>
git reset将主分支重置为您刚刚获取的内容。 --hard选项更改工作树中的所有文件以匹配origin/master中的文件


  git config --global user.email "691060969@qq.com"
  git config --global user.name "suzmya"



git clone git@github.com:markgacoka/selenium-proxy-rotator.git

fatal the upstream branch of your current branch does not match the name of your current branch to push to the upstream branch on the remote , use 

C:\Users\Administrator\source\repos


pyinstaller D:\codes\dpython.py

pyinstaller -F --i xxx\123.ico name.py，-F表示打包成一个文件，不想显示窗口的话加个-w

pyinstaller -F -w -i 3.ico CountDownByPy.py

pyinstaller -D xxx.py
-d生成一个文件目录包含可执行文件和相关动态链接库和资源文件等；
-f仅生成一个可执行文件
-i 表示可执行文件的图标


CCTEST